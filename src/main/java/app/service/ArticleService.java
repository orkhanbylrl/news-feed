package app.service;import app.entity.Article;import app.parser.JsoupParser;import app.parser.Website;import app.repository.ArticleRepository;import lombok.RequiredArgsConstructor;import lombok.extern.log4j.Log4j2;import org.springframework.stereotype.Repository;import org.springframework.stereotype.Service;import java.util.EnumSet;import java.util.List;import java.util.stream.Collectors;import java.util.stream.Stream;@Log4j2@Servicepublic class ArticleService {    private final ArticleRepository articleRepository;    public ArticleService(ArticleRepository repo) {        this.articleRepository = repo;    }    private static String fmt(String format, Object... args) {        return String.format(format, args);    }////    public List<Website> newsEnabled(int id) {//        List<Website> enabled = EnumSet.allOf(Website.class).stream().filter(site -> !disabled.contains(site)).collect(Collectors.toList());//        log.info(fmt("sites enabled %s ->", enabled.toString()));//        return enabled;//    }    public List<Article> saveAll(List<Article> articles) {        return articleRepository.saveAll(articles);    }    public Stream<JsoupParser> getNewsParsers() {        return EnumSet.allOf(Website.class).stream().map(site -> site.getParser());    }}